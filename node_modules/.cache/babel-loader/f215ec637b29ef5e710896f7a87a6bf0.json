{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/aramaswamy/Desktop/newsapp/src/Page1.js\";\n\n// import React from \"react\";\n//    import {Link } from \"react-router-dom\";\n//    import React from 'react';\n//    import TypeIt from \"typeit-react\";\n//    import DynamicFont from 'react-dynamic-font';\n//     function Page1() {\n// //       const styleObj =({ children }) => {\n// //         return <strong style={{ fontSize: \"80px\" }}>{children}</strong>;\n// //       };\n//         return (\n//           <div>\n//             {/* <Link to=\"/page2\"><button>\n//               Business\n//             </button>\n//             </Link> */}\n//             <p class=\"line-1 anim-typewriter\">Animation typewriter style using css steps()</p>\n//           </div>\n//         )\n// //   \n//     }\n//     export default Page1;\nclass TypeWriter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      _count: 0,\n      currentString: \"obj\",\n      charCount: 0,\n      messageBodyStr: 'This is a typewriter effect built in ReactJS\\'s componentDidUpdate and GreenSock onUpdate.',\n      speed: 7,\n      character: \"|\",\n      endFlashSpeed: 0,\n      blinkCount: 0\n    };\n    this._currentString = \"\";\n    this._charCount = 0;\n    this._blinkCount = 0;\n    this.onLoaded = this.onLoaded.bind(this);\n    this.blink = this.blink.bind(this);\n  }\n\n  onLoaded() {\n    let typingTl = new TimelineMax().timeScale(1);\n    typingTl.to(this, this.state.messageBodyStr.length / this.state.speed, {\n      _charCount: this.state.messageBodyStr.length,\n      ease: Linear.easeNone,\n      onUpdate: () => this.setState({\n        charCount: ~~this._charCount\n      }),\n      onComplete: () => {\n        this.textField.textContent = this.state.messageBodyStr;\n      }\n    }, '+=0.5').to(this, 1, {\n      onUpdate: this.blink,\n      _blinkCount: 2,\n      repeat: -1,\n      repeatDelay: this.state.endFlashSpeed,\n      ease: Linear.easeNone\n    });\n  }\n\n  componentDidMount() {\n    this.onLoaded();\n  }\n\n  componentDidUpdate(prevProps) {\n    this._currentString = this.state.messageBodyStr.substring(0, this.state.charCount) + this.state.character;\n  }\n\n  blink() {\n    this.setState({\n      blinkCount: ~~this._blinkCount\n    });\n    this._currentString = this.state.blinkCount % 2 ? this.state.messageBodyStr : this.state.messageBodyStr + this.state.character;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"svg\", {\n      viewBox: \"0 0 800 300\",\n      preserveAspectRatio: \"xMidYMin meet\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      onLoad: this.startAnim,\n      children: /*#__PURE__*/_jsxDEV(\"text\", {\n        x: \"10%\",\n        y: \"50%\",\n        className: \"myText\",\n        ref: c => this.textField = c,\n        children: this._currentString\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(TypeWriter, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 91,\n  columnNumber: 17\n}, this), document.querySelector(\"#app\"));","map":{"version":3,"sources":["/Users/aramaswamy/Desktop/newsapp/src/Page1.js"],"names":["TypeWriter","React","Component","constructor","props","state","_count","currentString","charCount","messageBodyStr","speed","character","endFlashSpeed","blinkCount","_currentString","_charCount","_blinkCount","onLoaded","bind","blink","typingTl","TimelineMax","timeScale","to","length","ease","Linear","easeNone","onUpdate","setState","onComplete","textField","textContent","repeat","repeatDelay","componentDidMount","componentDidUpdate","prevProps","substring","render","startAnim","c","ReactDOM","document","querySelector"],"mappings":"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","sourcesContent":["// import React from \"react\";\n//    import {Link } from \"react-router-dom\";\n//    import React from 'react';\n//    import TypeIt from \"typeit-react\";\n\n//    import DynamicFont from 'react-dynamic-font';\n\n//     function Page1() {\n\n// //       const styleObj =({ children }) => {\n// //         return <strong style={{ fontSize: \"80px\" }}>{children}</strong>;\n// //       };\n//         return (\n//           <div>\n//             {/* <Link to=\"/page2\"><button>\n//               Business\n//             </button>\n//             </Link> */}\n//             <p class=\"line-1 anim-typewriter\">Animation typewriter style using css steps()</p>\n\n//           </div>\n\n//         )\n// //   \n\n//     }\n\n//     export default Page1;\n\nclass TypeWriter extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { _count: 0, currentString : \"obj\" , charCount:0, messageBodyStr : 'This is a typewriter effect built in ReactJS\\'s componentDidUpdate and GreenSock onUpdate.', speed:7, character:\"|\", endFlashSpeed:0, blinkCount:0};\n   this._currentString = \"\";\n    this._charCount = 0;\n    this._blinkCount = 0;\n\n    this.onLoaded = this.onLoaded.bind(this);\n    this.blink = this.blink.bind(this);\n   \n  }\n \n \n \n  onLoaded() {\n    let typingTl = new TimelineMax().timeScale(1);\n    typingTl.to(this, this.state.messageBodyStr.length/this.state.speed, {\n     _charCount:this.state.messageBodyStr.length, \n          ease:Linear.easeNone,\n          onUpdate: ()=> this.setState({ charCount: ~~this._charCount }),\n          onComplete: ()=> {this.textField.textContent = this.state.messageBodyStr}\n     },'+=0.5')\n       .to(this,1, {\n          onUpdate:this.blink,\n          _blinkCount:2,\n          repeat:-1, \n          repeatDelay:this.state.endFlashSpeed,\n          ease:Linear.easeNone\n     })\n  }\n \n componentDidMount(){\n  \n  this.onLoaded();\n }\n \n componentDidUpdate(prevProps) {\n\n  this._currentString = this.state.messageBodyStr.substring(0, this.state.charCount)+this.state.character;\n }\n \n blink(){\n  \n  this.setState({ blinkCount: ~~this._blinkCount });\n  this._currentString = (this.state.blinkCount%2) ? this.state.messageBodyStr : this.state.messageBodyStr +this.state.character\n }\n\n  render() {\n    return (\n      <svg viewBox=\"0 0 800 300\" preserveAspectRatio=\"xMidYMin meet\" xmlns=\"http://www.w3.org/2000/svg\" onLoad={this.startAnim}>       \n        <text x='10%' y='50%' className='myText' ref={c => (this.textField = c)}>{this._currentString}\n        </text> \n      </svg>\n    );\n   \n   \n  }\n}\n\nReactDOM.render(<TypeWriter />, document.querySelector(\"#app\"));\n"]},"metadata":{},"sourceType":"module"}