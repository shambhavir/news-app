{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/aramaswamy/Desktop/newsapp/src/App.js\";\n\n/*import logo from './logo.svg';\nimport './App.css';\nimport React, {Component} from 'react'; \n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}*/\nimport React, { Component } from 'react';\nimport Pusher from 'pusher-js';\nimport pushid from 'pushid';\nimport './App.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      newsItems: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:5000/live').then(response => response.json()).then(articles => {\n      this.setState({\n        newsItems: [...this.state.newsItems, ...articles]\n      });\n    }).catch(error => console.log(error));\n    const pusher = new Pusher('<your app key>', {\n      cluster: '<your app cluster>',\n      encrypted: true\n    });\n    const channel = pusher.subscribe('news-channel');\n    channel.bind('update-news', data => {\n      this.setState({\n        newsItems: [...data.articles, ...this.state.newsItems]\n      });\n    });\n  }\n\n  render() {\n    const NewsItem = (article, id) => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: `${article.url}`,\n        children: article.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 24\n      }, this)\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }, this);\n\n    const newsItems = this.state.newsItems.map(e => NewsItem(e, pushid()));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"App-title\",\n        children: \"Live Bitcoin Feed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"news-items\",\n        children: newsItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/aramaswamy/Desktop/newsapp/src/App.js"],"names":["React","Component","Pusher","pushid","App","state","newsItems","componentDidMount","fetch","then","response","json","articles","setState","catch","error","console","log","pusher","cluster","encrypted","channel","subscribe","bind","data","render","NewsItem","article","id","url","title","map","e"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACI,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BI,KAD0B,GAClB;AACNC,MAAAA,SAAS,EAAE;AADL,KADkB;AAAA;;AAK1BC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,4BAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,QAAQ,IAAI;AAChB,WAAKC,QAAL,CAAc;AACZP,QAAAA,SAAS,EAAE,CAAC,GAAG,KAAKD,KAAL,CAAWC,SAAf,EAA0B,GAAGM,QAA7B;AADC,OAAd;AAGD,KANH,EAMKE,KANL,CAMWC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CANpB;AAQA,UAAMG,MAAM,GAAG,IAAIhB,MAAJ,CAAW,gBAAX,EAA6B;AAC1CiB,MAAAA,OAAO,EAAE,oBADiC;AAE1CC,MAAAA,SAAS,EAAE;AAF+B,KAA7B,CAAf;AAKA,UAAMC,OAAO,GAAGH,MAAM,CAACI,SAAP,CAAiB,cAAjB,CAAhB;AACAD,IAAAA,OAAO,CAACE,IAAR,CAAa,aAAb,EAA4BC,IAAI,IAAI;AAClC,WAAKX,QAAL,CAAc;AACZP,QAAAA,SAAS,EAAE,CAAC,GAAGkB,IAAI,CAACZ,QAAT,EAAmB,GAAG,KAAKP,KAAL,CAAWC,SAAjC;AADC,OAAd;AAGD,KAJD;AAKD;;AAEDmB,EAAAA,MAAM,GAAG;AACP,UAAMC,QAAQ,GAAG,CAACC,OAAD,EAAUC,EAAV,kBACf;AAAA,6BAAa;AAAG,QAAA,IAAI,EAAG,GAAED,OAAO,CAACE,GAAI,EAAxB;AAAA,kBAA4BF,OAAO,CAACG;AAApC;AAAA;AAAA;AAAA;AAAA;AAAb,OAASF,EAAT;AAAA;AAAA;AAAA;AAAA,YADF;;AAIA,UAAMtB,SAAS,GAAG,KAAKD,KAAL,CAAWC,SAAX,CAAqByB,GAArB,CAAyBC,CAAC,IAAIN,QAAQ,CAACM,CAAD,EAAI7B,MAAM,EAAV,CAAtC,CAAlB;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAGE;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA,kBAA4BG;AAA5B;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAzCyB;;AA4C5B,eAAeF,GAAf","sourcesContent":["/*import logo from './logo.svg';\nimport './App.css';\nimport React, {Component} from 'react'; \n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}*/\n\nimport React, { Component } from 'react';\n    import Pusher from 'pusher-js';\n    import pushid from 'pushid';\n    import './App.css';\n\n    class App extends Component {\n      state = {\n        newsItems: [],\n      }\n\n      componentDidMount() {\n        fetch('http://localhost:5000/live')\n          .then(response => response.json())\n          .then(articles => {\n            this.setState({\n              newsItems: [...this.state.newsItems, ...articles],\n            });\n          }).catch(error => console.log(error));\n\n        const pusher = new Pusher('<your app key>', {\n          cluster: '<your app cluster>',\n          encrypted: true,\n        });\n\n        const channel = pusher.subscribe('news-channel');\n        channel.bind('update-news', data => {\n          this.setState({\n            newsItems: [...data.articles, ...this.state.newsItems],\n          });\n        });\n      }\n\n      render() {\n        const NewsItem = (article, id) => (\n          <li key={id}><a href={`${article.url}`}>{article.title}</a></li>\n        );\n\n        const newsItems = this.state.newsItems.map(e => NewsItem(e, pushid()));\n\n        return (\n          <div className=\"App\">\n            <h1 className=\"App-title\">Live Bitcoin Feed</h1>\n\n            <ul className=\"news-items\">{newsItems}</ul>\n          </div>\n        );\n      }\n    }\n\n    export default App;"]},"metadata":{},"sourceType":"module"}